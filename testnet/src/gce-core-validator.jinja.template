resources:
{% for index in range(1, properties['count'] + 1) %}
{% set NAME_PREFIX = properties['namePrefix'] + '-' + index|string %}
- name: {{ NAME_PREFIX }}
  type: compute.v1.instance
  properties:
    tags:
      fingerprint: ARl554Lh7GU=
      items:
      - testnet-core
    zone: {{ properties['core-zone-'+index|string] }}
    machineType: https://www.googleapis.com/compute/v1/projects/{{ properties['gcp-project']}}/zones/{{ properties['core-zone-'+index|string] }}/machineTypes/{{ properties['machineType'] }}
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        diskName: {{ NAME_PREFIX }}-disk
        sourceImage: {{ properties['image'] }}
    networkInterfaces:
    - network: {{ properties['gcp-network'] }}
      # Access Config required to give the instance a public IP address
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    serviceAccounts:
    - email: {{ properties['service-account'] }}
      scopes:
        - https://www.googleapis.com/auth/devstorage.read_write
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          export DEBIAN_FRONTEND=noninteractive
          DEBIAN_FRONTEND="noninteractive"  sudo apt-get update -y && apt-get install -y tzdata
          wget -qO - https://apt.stellar.org/SDF.asc | sudo apt-key add -
          echo "deb https://apt.stellar.org/public stable/" | sudo tee -a /etc/apt/sources.list.d/SDF.list
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo apt-get install -y apt-transport-https ca-certificates gnupg
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update -y && sudo apt-get install -y google-cloud-sdk
          sudo apt-get install -y stellar-core
          sudo mkdir /opt/stellar
          sudo chmod 777 -R /opt/stellar
          sudo apt-get install -y postgresql postgresql-contrib
          sleep 5s
          cd /etc/stellar
          sudo gsutil -m cp gs://{{ properties['gcs-deployment-buckets'] }}/* /tmp
          sleep 5s
          sudo service postgresql restart
          echo "ALTER USER {{ properties['psql-username'] }} WITH PASSWORD '{{ properties['psql-password'] }}';" >> /tmp/core-newdb.sql
          echo "grant all privileges on database {{ properties['psql-dbname'] }} to {{ properties['psql-username'] }};" >> /tmp/core-newdb.sql
          sudo -i -u postgres bash -c 'createdb {{ properties['psql-dbname'] }} && createuser {{ properties['psql-username'] }} && psql {{ properties['psql-dbname'] }} -f /tmp/core-newdb.sql'
          sudo cp /tmp/core-validator.cfg /etc/stellar/stellar-core.cfg
          sudo cp /tmp/stellar-core.service /lib/systemd/system/
          sudo chmod 644 /lib/systemd/system/stellar-core.service
          sudo chown root:root /lib/systemd/system/stellar-core.service
          sudo sed -i 's/<!HISTORY_ARCHIVE>/{{ properties['history-archive'] }}/g' /etc/stellar/stellar-core.cfg
          sudo sed -i 's/<!NETWORK_NAME>/{{ properties['stellar-network-name'] }}/g' /etc/stellar/stellar-core.cfg
          sudo sed -i 's/<!NODE_SEED>/{{ properties['core-validator-key-'+index|string] }}/g' /etc/stellar/stellar-core.cfg
          sudo sed -i 's/<!PSQL_USERNAME>/{{ properties['psql-username'] }}/g' /etc/stellar/stellar-core.cfg
          sudo sed -i 's/<!PSQL_PASSWORD>/{{ properties['psql-password'] }}/g' /etc/stellar/stellar-core.cfg
          sudo chown -R stellar:stellar /etc/stellar/stellar-core.cfg
          cd /etc/stellar
          sudo -u stellar stellar-core --conf /etc/stellar/stellar-core.cfg new-db
          sudo -u stellar stellar-core --conf /etc/stellar/stellar-core.cfg force-scp
          sudo chown -R stellar:stellar /opt/stellar
          {% if index == 1 %}
          sudo -u stellar stellar-core --conf /etc/stellar/stellar-core.cfg new-hist gcloud
          {% endif %}
          sudo systemctl start stellar-core
          sudo rm -rf /tmp/core-validator*.cfg
          sudo rm -rf /tmp/core-newdb.sql
          sudo rm -rf /tmp/start-validator.sh
          sudo rm -rf /tmp/stellar-core.service
          sudo stellar-core-cmd "ll?level=WARNING"
          {% if index > 1 %}
          sudo rm -rf /etc/stellar/*.log
          {% endif %}
{% endfor %}
